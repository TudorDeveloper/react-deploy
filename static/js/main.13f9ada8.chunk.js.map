{"version":3,"sources":["trollface.png","Header.js","MemeGenerator.js","App.js","index.js"],"names":["Header","src","image","alt","MemeGenerator","state","topText","bottomText","randomImg","allMemeImgs","handleChange","bind","handleSubmit","fetch","then","response","json","memes","data","setState","event","target","name","value","this","preventDefault","randNum","Math","floor","random","length","randMemeImg","url","className","onSubmit","type","placeholder","onChange","Component","App","ReactDOM","render","document","getElementById"],"mappings":"0KAAe,MAA0B,sC,OCY1BA,MATf,WACI,OACQ,mCACD,qBAAKC,IAAKC,EAAOC,IAAI,aACpB,mD,0CCgEGC,E,kDApEX,aAAe,IAAD,8BACV,gBACKC,MAAQ,CACTC,QAAS,GACTC,WAAY,GACZC,UAAW,gCACXC,YAAa,IAEjB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBATV,E,qDAYd,WAAqB,IAAD,OAChBE,MAAM,qCACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GACF,IAAOE,EAASF,EAASG,KAAlBD,MACP,EAAKE,SAAS,CAAEV,YAAaQ,S,0BAI7C,SAAaG,GACD,MAAsBA,EAAMC,OAArBC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MACbC,KAAKL,SAAL,eAAiBG,EAAOC,M,0BAGpC,SAAaH,GACLA,EAAMK,iBACN,IAAMC,EAAUC,KAAKC,MAAMD,KAAKE,SAAWL,KAAKnB,MAAMI,YAAYqB,QAC5DC,EAAcP,KAAKnB,MAAMI,YAAYiB,GAASM,IACpDR,KAAKL,SAAS,CAAEX,UAAYuB,M,oBAGhC,WACA,OAEQ,gCACI,uBAAME,UAAU,YAAYC,SAAUV,KAAKZ,aAA3C,UAEQ,uBACIuB,KAAK,OACLb,KAAK,UACLc,YAAY,WACZb,MAAOC,KAAKnB,MAAMC,QAClB+B,SAAUb,KAAKd,eAGnB,uBACIyB,KAAK,OACLb,KAAK,aACLc,YAAY,cACZb,MAAOC,KAAKnB,MAAME,WAClB8B,SAAUb,KAAKd,eAEvB,4CAER,sBAAKuB,UAAU,OAAf,UAEQ,qBAAKhC,IAAKuB,KAAKnB,MAAMG,UAAWL,IAAI,KACpC,oBAAI8B,UAAU,MAAd,SAAqBT,KAAKnB,MAAMC,UAChC,oBAAI2B,UAAU,SAAd,SAAwBT,KAAKnB,MAAME,uB,GA7D3B+B,a,MCYbC,MATf,WACQ,OACI,gCACC,cAAC,EAAD,IACA,cAAC,EAAD,QCLbC,IAASC,OAAQ,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.13f9ada8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/trollface.c371feba.png\";","import React from \"react\"\r\nimport image from './trollface.png';\r\n\r\nfunction Header() {\r\n    return (\r\n            <header>\r\n           <img src={image} alt=\"Problem?\" />  \r\n            <p>Meme generator</p>\r\n            </header>\r\n            )\r\n    }\r\n        \r\nexport default Header","import React, {Component} from \"react\"\r\n\r\nclass MemeGenerator extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            topText: \"\",\r\n            bottomText: \"\",\r\n            randomImg: \"http://i.imgflip.com/1bij.jpg\",   \r\n            allMemeImgs: [] \r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"https://api.imgflip.com/get_memes\")\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                const {memes} = response.data\r\n                this.setState({ allMemeImgs: memes })\r\n    })\r\n}\r\n\r\nhandleChange(event)  {\r\n            const {name, value} = event.target\r\n            this.setState({ [name]: value })\r\n    }\r\n\r\nhandleSubmit(event) {\r\n        event.preventDefault()\r\n        const randNum = Math.floor(Math.random() * this.state.allMemeImgs.length)\r\n        const randMemeImg = this.state.allMemeImgs[randNum].url\r\n        this.setState({ randomImg : randMemeImg })\r\n}\r\n\r\n    render() {\r\n    return (\r\n        \r\n            <div>\r\n                <form className=\"meme-form\" onSubmit={this.handleSubmit}>\r\n                    \r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"topText\"\r\n                            placeholder=\"Top Text\"\r\n                            value={this.state.topText}\r\n                            onChange={this.handleChange}\r\n                        />\r\n\r\n                        <input  \r\n                            type=\"text\"\r\n                            name=\"bottomText\"\r\n                            placeholder=\"Bottom Text\"\r\n                            value={this.state.bottomText}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    <button>Gen</button>\r\n                </form>\r\n            <div className=\"meme\">\r\n                    \r\n                    <img src={this.state.randomImg} alt=\"\" /> \r\n                    <h2 className=\"top\">{this.state.topText}</h2>\r\n                    <h2 className=\"bottom\">{this.state.bottomText}</h2>\r\n            \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MemeGenerator","import React from \"react\"\r\nimport Header from \"./Header\"\r\nimport MemeGenerator from \"./MemeGenerator\"\r\nimport styles from \"./style.css\"\r\n\r\nfunction App() {\r\n        return (\r\n            <div>\r\n             <Header />\r\n             <MemeGenerator />\r\n            </div>      \r\n        )\r\n    }\r\n\r\nexport default App","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\";\n\nReactDOM.render (<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}